(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{94:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),o=(n(0),n(99)),i={id:"return",title:"Returning new data from producers"},c={unversionedId:"return",id:"return",isDocsHomePage:!1,title:"Returning new data from producers",description:"<div",source:"@site/docs/return.mdx",slug:"/return",permalink:"/immer/return",editUrl:"https://github.com/immerjs/immer/edit/master/website/docs/return.mdx",version:"current",sidebar:"Immer",previous:{title:"Auto freezing",permalink:"/immer/freezing"},next:{title:"Async producers & createDraft / finishDraft",permalink:"/immer/async"}},s=[{value:"Producing <code>undefined</code> using <code>nothing</code>",id:"producing-undefined-using-nothing",children:[]},{value:"Inline shortcuts using <code>void</code>",id:"inline-shortcuts-using-void",children:[]}],d={toc:s};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("center",null,Object(o.b)("div",{"data-ea-publisher":"immerjs","data-ea-type":"image",className:"horizontal bordered"})),Object(o.b)("details",null,Object(o.b)("summary",{className:"egghead-summary"},"egghead.io lesson 9: Returning completely new state"),Object(o.b)("br",null),Object(o.b)("div",null,Object(o.b)("iframe",{width:"760",height:"427",scrolling:"no",src:"https://egghead.io/lessons/react-return-completely-new-state-from-an-immer-producer/embed"})),Object(o.b)("a",{className:"egghead-link",href:"https://egghead.io/lessons/react-return-completely-new-state-from-an-immer-producer"},"Hosted on egghead.io")),Object(o.b)("p",null,"It is not needed to return anything from a producer, as Immer will return the (finalized) version of the ",Object(o.b)("inlineCode",{parentName:"p"},"draft")," anyway. However, it is allowed to just ",Object(o.b)("inlineCode",{parentName:"p"},"return draft"),"."),Object(o.b)("p",null,"It is also allowed to return arbitrarily other data from the producer function. But ",Object(o.b)("em",{parentName:"p"},"only")," if you didn't modify the draft. This can be useful to produce an entirely new state. Some examples:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},'const userReducer = produce((draft, action) => {\n    switch (action.type) {\n        case "renameUser":\n            // OK: we modify the current state\n            draft.users[action.payload.id].name = action.payload.name\n            return draft // same as just \'return\'\n        case "loadUsers":\n            // OK: we return an entirely new state\n            return action.payload\n        case "adduser-1":\n            // NOT OK: This doesn\'t do change the draft nor return a new state!\n            // It doesn\'t modify the draft (it just redeclares it)\n            // In fact, this just doesn\'t do anything at all\n            draft = {users: [...draft.users, action.payload]}\n            return\n        case "adduser-2":\n            // NOT OK: modifying draft *and* returning a new state\n            draft.userCount += 1\n            return {users: [...draft.users, action.payload]}\n        case "adduser-3":\n            // OK: returning a new state. But, unnecessary complex and expensive\n            return {\n                userCount: draft.userCount + 1,\n                users: [...draft.users, action.payload]\n            }\n        case "adduser-4":\n            // OK: the immer way\n            draft.userCount += 1\n            draft.users.push(action.payload)\n            return\n    }\n})\n')),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Note: It is not possible to return ",Object(o.b)("inlineCode",{parentName:"em"},"undefined")," this way, as it is indistinguishable from ",Object(o.b)("em",{parentName:"em"},"not")," updating the draft! Read on...")),Object(o.b)("h2",{id:"producing-undefined-using-nothing"},"Producing ",Object(o.b)("inlineCode",{parentName:"h2"},"undefined")," using ",Object(o.b)("inlineCode",{parentName:"h2"},"nothing")),Object(o.b)("p",null,"So, in general, one can replace the current state by just ",Object(o.b)("inlineCode",{parentName:"p"},"return"),"ing a new value from the producer, rather than modifying the draft. There is a subtle edge case however: if you try to write a producer that wants to replace the current state with ",Object(o.b)("inlineCode",{parentName:"p"},"undefined"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},"produce({}, draft => {\n    // don't do anything\n})\n")),Object(o.b)("p",null,"Versus:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},"produce({}, draft => {\n    // Try to return undefined from the producer\n    return undefined\n})\n")),Object(o.b)("p",null,"The problem is that in JavaScript a function that doesn't return anything also returns ",Object(o.b)("inlineCode",{parentName:"p"},"undefined"),"! So immer cannot differentiate between those different cases. So, by default, Immer will assume that any producer that returns ",Object(o.b)("inlineCode",{parentName:"p"},"undefined")," just tried to modify the draft."),Object(o.b)("p",null,"However, to make it clear to Immer that you intentionally want to produce the value ",Object(o.b)("inlineCode",{parentName:"p"},"undefined"),", you can return the built-in token ",Object(o.b)("inlineCode",{parentName:"p"},"nothing"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},'import produce, {nothing} from "immer"\n\nconst state = {\n    hello: "world"\n}\n\nproduce(state, draft => {})\nproduce(state, draft => undefined)\n// Both return the original state: { hello: "world"}\n\nproduce(state, draft => nothing)\n// Produces a new state, \'undefined\'\n')),Object(o.b)("p",null,"N.B. Note that this problem is specific for the ",Object(o.b)("inlineCode",{parentName:"p"},"undefined")," value, any other value, including ",Object(o.b)("inlineCode",{parentName:"p"},"null"),", doesn't suffer from this issue."),Object(o.b)("p",null,"Tip: to be able to return ",Object(o.b)("inlineCode",{parentName:"p"},"nothing")," from a recipe when using TypeScript, the ",Object(o.b)("inlineCode",{parentName:"p"},"state"),"'s type must accept ",Object(o.b)("inlineCode",{parentName:"p"},"undefined")," as value."),Object(o.b)("h2",{id:"inline-shortcuts-using-void"},"Inline shortcuts using ",Object(o.b)("inlineCode",{parentName:"h2"},"void")),Object(o.b)("details",null,Object(o.b)("summary",{className:"egghead-summary"},"egghead.io lesson 10: Avoid accidental returns by using _void_"),Object(o.b)("br",null),Object(o.b)("div",null,Object(o.b)("iframe",{width:"760",height:"427",scrolling:"no",src:"https://egghead.io/lessons/react-avoid-accidental-returns-of-new-state-by-using-the-void-keyword/embed"})),Object(o.b)("a",{className:"egghead-link",href:"https://egghead.io/lessons/react-avoid-accidental-returns-of-new-state-by-using-the-void-keyword"},"Hosted on egghead.io")),Object(o.b)("p",null,"Draft mutations in Immer usually warrant a code block, since a return denotes an overwrite. Sometimes that can stretch code a little more than you might be comfortable with."),Object(o.b)("p",null,"In such cases, you can use javascripts ",Object(o.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/void"},Object(o.b)("inlineCode",{parentName:"a"},"void"))," operator, which evaluates expressions and returns ",Object(o.b)("inlineCode",{parentName:"p"},"undefined"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},"// Single mutation\nproduce(draft => void (draft.user.age += 1))\n\n// Multiple mutations\nproduce(draft => void ((draft.user.age += 1), (draft.user.height = 186)))\n")),Object(o.b)("p",null,"Code style is highly personal, but for code bases that are to be understood by many, we recommend to stick to the classic ",Object(o.b)("inlineCode",{parentName:"p"},"draft => { draft.user.age += 1}")," to avoid cognitive overhead."))}u.isMDXComponent=!0},99:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=a.a.createContext({}),u=function(e){var t=a.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=u(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),l=u(n),b=r,m=l["".concat(i,".").concat(b)]||l[b]||p[b]||o;return n?a.a.createElement(m,c(c({ref:t},d),{},{components:n})):a.a.createElement(m,c({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var d=2;d<o;d++)i[d]=n[d];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);